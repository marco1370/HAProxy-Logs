global
    maxconn 20000
    log /dev/log local0 info
    user haproxy
    group haproxy
    daemon

defaults
    mode http
    option redispatch
    option forwardfor
    option httpclose
    option  dontlognull
    retries 3
    timeout queue 1m
    timeout connect 10s
    timeout client 1m
    timeout server 1m
    timeout http-keep-alive 10s
    timeout check 2s
    log-format "%b %ci:%cp [%tr] %ft %s %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %fi %fp %hr %hs %{+Q}r %{+E,+Q}HQ %B %bi %bp %ST"

listen stats
    log /dev/log local0 err
    bind 0.0.0.0:8080
    mode http
    stats enable
    stats realm Strictly\ Private
    stats uri /stats
    stats auth admin:admin

frontend http
    log /dev/log local0 info
    bind 0.0.0.0:80
    acl stats_haproxy_com_select hdr(host) -i stats.haproxy.com
    use_backend stats_haproxy_com if stats_haproxy_com_select
    acl stats-again_haproxy_com_select hdr(host) -i stats-again.haproxy.com
    use_backend stats-again_haproxy_com if stats-again_haproxy_com_select

backend stats_haproxy_com
    mode http
    balance roundrobin
    option httpchk GET /stats
    http-check expect status 401
    option httpclose
    option forwardfor
    server local-server1 127.0.0.1:8080 check fall 3 rise 2
    server local-server2 127.0.0.1:8080 check fall 3 rise 2
    http-request replace-uri ([^\/:]*:\/\/[^\/]*)?(.*) \1/stats\2

backend stats-again_haproxy_com
    mode http
    balance roundrobin
    option httpchk GET /stats
    http-check expect status 401
    option httpclose
    option forwardfor
    server local-server1 127.0.0.1:8080 check fall 3 rise 2
    server local-server2 127.0.0.1:8080 check fall 3 rise 2
    http-request replace-path (.*) /stats\1
